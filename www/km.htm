<html lang="en">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta charset="utf-8" />
  <title>Keyboard Mouse</title>
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <script>
window.addEventListener("DOMContentLoaded", () => {

var $ = document.querySelector.bind(document);
var touchArea = $("#touch-area");
var textArea = $("#text-area");

var touchStarted = false;
var throttleTimer = false;
var debounceTimer = false;
var currX = 0;
var currY = 0;
var lastX = null;
var lastY = null;

const throttle = (callback, time, ...args) => {
  if (throttleTimer) return;
  throttleTimer = true;
  setTimeout(() => {
    callback(...args);
    throttleTimer = false;
  }, time);
};

const debounce = (callback, time) => {
  window.clearTimeout(debounceTimer);
  debounceTimer = window.setTimeout(callback, time);
};

const postData = (path, data) => {
  const xhr = new XMLHttpRequest();
  xhr.onreadystatechange = () => {
    if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
      // Request finished. Do processing here.
    }
  }
  xhr.open("POST", path, true);
  xhr.send(data);
};

const getPointerEvent = (event) => {
  return event.targetTouches ? event.targetTouches[0] : event;
};

const setListener = (elm, events, callback) => {
  let eventsArray = events.split(" ");
  let i = eventsArray.length;
  while (i--) {
    elm.addEventListener(eventsArray[i], callback, false);
  }
};

setListener(touchArea, "touchstart mousedown", (e) => {
  e.preventDefault();
  let pointer = getPointerEvent(e);
  currX = pointer.pageX;
  currY = pointer.pageY;
  touchStarted = true;
  touchArea.innerHTML = "touch started";

  // detecting if after 200ms the finger is still in the same position
  setTimeout(() => {
    if (!touchStarted) {
      postData("/mouse", "left click");
      touchArea.innerHTML = "left click";
    }
  }, 200);
});

setListener(touchArea, "touchend mouseup touchcancel", (e) => {
  e.preventDefault();
  touchStarted = false;
  lastX = null;
  lastY = null;
  touchArea.innerHTML = "touch end";
});

setListener(touchArea, "touchmove mousemove", (e) => {
  e.preventDefault();
  let pointer = getPointerEvent(e);
  currX = parseInt(pointer.pageX);
  currY = parseInt(pointer.pageY);
  if (lastX == null) lastX = currX;
  if (lastY == null) lastY = currY;
  if (touchStarted) {
    touchArea.innerHTML = `swiping ${currX - lastX} ${currY - lastY}`;
    throttle(postData, 10, "/mouse", `${currX - lastX} ${currY - lastY}`);
  }
  lastX = currX;
  lastY = currY;
});

textArea.onkeydown = (e) => {
  let key = e.keyCode || e.charCode;
  if (key === 8 && textArea.value.length === 0) {
    postData("/keys", "{BACKSPACE}");
  }
  else if (e.key === "Enter") {
    if (textArea.value.length === 0) {
      postData("/keys", "{ENTER}");
    }
    else {
      postData("/keys", textArea.value);
      textArea.value = "";
    }
  }
};

setListener($(".mouse"), "touchstart mousedown", (e) => {
  e.preventDefault();
  e.stopPropagation();
  if (e.target.id == 'button-area') return;
  postData("/mouse", `${e.target.id} down`);
  touchArea.innerHTML = `${e.target.id} down`;
});

setListener($(".mouse"), "touchend mouseup", (e) => {
  e.preventDefault();
  e.stopPropagation();
  if (e.target.id == 'button-area') return;
  postData("/mouse", `${e.target.id} up`);
  touchArea.innerHTML = `${e.target.id} up`;
});

setListener($(".media"), "click", (e) => {
  e.preventDefault();
  e.stopPropagation();
  if (e.target.id == 'media-area') return;
  postData("/media", e.target.id);
  touchArea.innerHTML = e.target.id;
});

}, false); // end dom load

</script>
<style>

/* * { border: 1px solid red; } */

.material-icons { font-size: 40px; }

body, html {
  color: #fff;
  background-color: #333;
}

#touch-area {
  width: 100%;
  height: 70%;
}

#button-area {
  width: 100%;
  height: 10%;
}

#button-area > div {
  width: 32%;
  height: 90%;
  background-color: #3f3f3f;
  border: 1px solid #a1a1a1;
}

#text-area {
  width: 100%;
  font-size: 25px;
  color: inherit;
  background-color: inherit;
  border: 1px solid #fff;
  padding: 3px 6px;
}

#media-area {
  width: 100%;
  height: 10%;
  display: inline-flex;
  flex-wrap: nowrap;
  text-align: center;
  font-size: 42px;
}

.flex-spread-horz {
  width: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
  flex: 1;
}
</style>
</head>

<body>
  <div id="touch-area"></div>

  <div id="button-area" class="flex-spread-horz mouse">
    <div id="left">&nbsp;</div>
    <div id="middle">&nbsp;</div>
    <div id="right">&nbsp;</div>
  </div>
  
  <div id="media-area" class="flex-spread-horz media">
    <div id="play">‚èØ</div>
    <i id="stop" class="material-icons">stop</i>
    <i id="back" class="material-icons">skip_previous</i>
    <i id="next" class="material-icons">skip_next</i>
    <i id="up" class="material-icons">volume_up</i>
    <i id="down" class="material-icons">volume_down</i>
    <i id="mute" class="material-icons">volume_off</i>
  </div>
  
  <input id="text-area" placeholder="type here..." aria-label="send text">
</body>
</html>
